{"version":3,"file":"static/js/moviesPage.90a94ce4.chunk.js","mappings":"6OAGMA,EAAgB,CAClBC,MAAO,IAGEC,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAWxB,OACI,SAAC,KAAD,CACIH,cAAeA,EACnBG,SAZiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACA,KAAxBD,EAAOH,MAAMK,QAIjBH,EAASC,EAAOH,OAChBI,KAJIE,MAAM,uBAQV,UAGI,UAAC,KAAD,CACAC,aAAa,MADb,WAEI,SAAC,KAAD,CACIC,KAAK,OACLC,KAAK,WAET,mBACAD,KAAK,SADL,0B,SCrBD,SAASE,IAEpB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eACMC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACc,KAAhBR,GAIJS,EAAAA,GAAsBT,GACjBU,MAAK,SAAAC,GACFR,EAAUQ,EAASC,cAE5B,CAACZ,IASJ,OACI,iCACI,SAACX,EAAD,CAAYC,SARC,SAACuB,GAClBZ,EAAeY,GACfV,EAAU,IACVE,EAAgB,CAAEjB,MAAOyB,QAOjB,wBACKX,GAAUA,EAAOY,KAAI,SAAAC,GAAK,OACvB,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMb,GAA/C,SAA2DS,EAAMK,SAD5DL,EAAME,c,6KCvCvC,IAAMI,EAAW,gCACXC,EAAU,mCAEHC,EAAa,kCAGnB,SAASC,IACZ,OAAOC,MAAM,GAAD,OACLJ,EADK,sCACiCC,IAExCZ,MAAK,SAAAC,GAAQ,OAAIA,EAASe,UAG5B,SAASC,EAAkBvC,GAC9B,OAAOqC,MAAM,GAAD,OACLJ,EADK,gCAC2BC,EAD3B,iCAC2DlC,EAD3D,gCAGPsB,MAAK,SAAAC,GAAQ,OAAIA,EAASe,UAG5B,SAASE,EAAkBC,GAC9B,OAAOJ,MAAM,GAAD,OACLJ,EADK,iBACYQ,EADZ,oBAC+BP,EAD/B,oBAGPZ,MAAK,SAAAC,GAAQ,OAAIA,EAASe,UAG5B,SAASI,EAAeD,GAC3B,OAAOJ,MAAM,GAAD,OACLJ,EADK,iBACYQ,EADZ,4BACuCP,EADvC,oBAGPZ,MAAK,SAAAC,GAAQ,OAAIA,EAASe,UAG5B,SAASK,EAAkBF,GAC9B,OAAOJ,MAAM,GAAD,OACLJ,EADK,iBACYQ,EADZ,4BACuCP,EADvC,2BAGPZ,MAAK,SAAAC,GAAQ,OAAIA,EAASe","sources":["components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","services/themoviedb-api.js"],"sourcesContent":["import { Formik, Form, Field } from \"formik\";\n\n\nconst initialValues = {\n    query: '',\n};\n\nexport const SearchForm = ({onSubmit}) => {\n    \n    const handleSubmit = (values, { resetForm }) => {\n        if (values.query.trim() === '') {\n            alert('Enter search query');\n            return\n        }\n        onSubmit(values.query);\n        resetForm();\n    }\n\n    return (\n        <Formik\n            initialValues={initialValues}\n        onSubmit={handleSubmit}>\n            <Form\n            autoComplete=\"off\">\n                <Field\n                    type=\"text\"\n                    name=\"query\"\n                />\n                <button\n                type=\"submit\">Search</button>\n            </Form> \n        </Formik>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport { SearchForm } from \"components/SearchForm/SearchForm.jsx\";\nimport * as api from \"services/themoviedb-api.js\";\n\n\n\nexport default function MoviesPage() {\n\n    const [searchQuery, setSearchQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [, setSearchParams] = useSearchParams();\n    const location = useLocation();\n\n    \n    useEffect(() => {\n        if (searchQuery === '') {\n            return;\n        }\n\n        api.fetchSearchMovies(searchQuery)\n            .then(response => {\n                setMovies(response.results);\n            });\n    }, [searchQuery]);\n\n\n    const onFormSubmit = (value) => {\n        setSearchQuery(value);\n        setMovies([]);\n        setSearchParams({ query: value });\n    }\n\n    return (\n        <>\n            <SearchForm onSubmit={onFormSubmit} />\n            \n                <ul>\n                    {movies && movies.map(movie => \n                        <li key={movie.id}>\n                            <Link to={`/movies/${movie.id}`} state={{from: location}}>{movie.title}</Link>\n                        </li>\n               )}\n            </ul>\n            \n        </>\n        \n        \n    )\n}\n\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1a4768bd62313a9ba272b58353515c76';\n\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport function fetchTrendingMovies() {\n    return fetch(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    )\n        .then(response => response.json());\n};\n\nexport function fetchSearchMovies(query) {\n    return fetch(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n        .then(response => response.json());\n};\n\nexport function fetchMovieDetails(movieId) {\n    return fetch(\n        `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n        .then(response => response.json());\n};\n\nexport function fetchMovieCast(movieId) {\n    return fetch(\n        `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n        .then(response => response.json());\n};\n\nexport function fetchMovieReviews(movieId) {\n    return fetch(\n        `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n        .then(response => response.json());\n};"],"names":["initialValues","query","SearchForm","onSubmit","values","resetForm","trim","alert","autoComplete","type","name","MoviesPage","useState","searchQuery","setSearchQuery","movies","setMovies","useSearchParams","setSearchParams","location","useLocation","useEffect","api","then","response","results","value","map","movie","to","id","state","from","title","BASE_URL","API_KEY","POSTER_URL","fetchTrendingMovies","fetch","json","fetchSearchMovies","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}