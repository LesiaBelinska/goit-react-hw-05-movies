{"version":3,"file":"static/js/cast.cb03f597.chunk.js","mappings":"2NACA,EAAuB,mB,kBCMR,SAASA,IAEpB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAmBH,GAASI,MAAK,SAAAC,GAAO,OAAEN,EAASM,EAAQC,WAC7D,CAACN,KAIC,8BACKF,IAAS,8BAAGA,EAAMS,KAAI,SAACD,GAAD,OAAU,0BAC5BA,EAAKE,cACF,gBACIC,IAAKN,EAAAA,GAAiBG,EAAKE,aAC3BE,IAAKJ,EAAKK,KACVC,MAAM,MACNC,OAAO,SACN,SAAC,MAAD,CACDC,UAAWC,KACnB,uBAAIT,EAAKK,SAT6BL,EAAKU,a,6KCnB3D,IAAMC,EAAW,gCACXC,EAAU,mCAEHC,EAAa,kCAGnB,SAASC,IACZ,OAAOC,MAAM,GAAD,OACLJ,EADK,sCACiCC,IAExCd,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,UAG5B,SAASC,EAAkBC,GAC9B,OAAOJ,MAAM,GAAD,OACLJ,EADK,gCAC2BC,EAD3B,iCAC2DO,EAD3D,gCAGPrB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,UAG5B,SAASG,EAAkB1B,GAC9B,OAAOqB,MAAM,GAAD,OACLJ,EADK,iBACYjB,EADZ,oBAC+BkB,EAD/B,oBAGPd,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,UAG5B,SAASI,EAAe3B,GAC3B,OAAOqB,MAAM,GAAD,OACLJ,EADK,iBACYjB,EADZ,4BACuCkB,EADvC,oBAGPd,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,UAG5B,SAASK,EAAkB5B,GAC9B,OAAOqB,MAAM,GAAD,OACLJ,EADK,iBACYjB,EADZ,4BACuCkB,EADvC,2BAGPd,MAAK,SAAAkB,GAAQ,OAAIA,EAASC","sources":["webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Cast_icon__XpqHH\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { BiUser } from \"react-icons/bi\";\nimport s from \"./Cast.module.css\"\n\nimport * as API from \"services/themoviedb-api.js\";\n\nexport default function Cast() {\n\n    const [casts, setCasts] = useState(null);\n    const { movieId } = useParams();\n    \n    useEffect(() => {\n        API.fetchMovieCast(movieId).then(request=>setCasts(request.cast));\n    },[movieId])\n    \n\n    return (\n        <>\n            {casts && <>{casts.map((cast) => <li key={cast.id}>\n                {cast.profile_path ?\n                    <img\n                        src={API.POSTER_URL + cast.profile_path}\n                        alt={cast.name}\n                        width=\"100\"\n                        height=\"150\"\n                    /> : <BiUser\n                        className={s.icon} />}\n                <p>{cast.name}</p>\n            </li>)}</>\n            }\n        </>\n    )\n}","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1a4768bd62313a9ba272b58353515c76';\n\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport function fetchTrendingMovies() {\n    return fetch(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    )\n        .then(response => response.json());\n};\n\nexport function fetchSearchMovies(query) {\n    return fetch(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n        .then(response => response.json());\n};\n\nexport function fetchMovieDetails(movieId) {\n    return fetch(\n        `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n        .then(response => response.json());\n};\n\nexport function fetchMovieCast(movieId) {\n    return fetch(\n        `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n        .then(response => response.json());\n};\n\nexport function fetchMovieReviews(movieId) {\n    return fetch(\n        `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n        .then(response => response.json());\n};"],"names":["Cast","useState","casts","setCasts","movieId","useParams","useEffect","API","then","request","cast","map","profile_path","src","alt","name","width","height","className","s","id","BASE_URL","API_KEY","POSTER_URL","fetchTrendingMovies","fetch","response","json","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}