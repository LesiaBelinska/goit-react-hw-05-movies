{"version":3,"file":"static/js/moviesDetailsPage.16e67d0a.chunk.js","mappings":"6OAGaA,EAAW,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAE9B,OACI,0BACI,oBAAQC,KAAK,SAASD,QAASA,EAA/B,WACI,SAAC,MAAD,IACCD,Q,SCCF,SAASG,IAEpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAsBV,GAASW,KAAKP,KACrC,CAACJ,IAIJ,OACI,iCACI,SAACL,EAAD,CAAUE,QAJD,0BAAMQ,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUK,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAIpBjB,MAAM,YAClCO,IACG,iCACI,gBACIW,IAAKJ,EAAAA,GAAiBP,EAAMY,YAC5BC,IAAKb,EAAMc,MACXC,MAAM,MACNC,OAAO,SAEX,wBAAKhB,EAAMc,SACX,yCAAe,0BAAOd,EAAMiB,mBAC5B,sCACA,uBAAIjB,EAAMkB,WACTlB,EAAMmB,SACH,iCACI,mCACA,wBACKnB,EAAMmB,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACd,wBAAiBD,EAAME,MAAdD,YAIzB,mDACA,4BACI,SAAC,KAAD,CAASE,GAAI,OAAQf,MAAOL,EAASK,MAArC,mBACA,SAAC,KAAD,CAASe,GAAI,UAAWf,MAAOL,EAASK,MAAxC,4BAMZ,SAAC,KAAD,S,4MCzDNgB,EAAW,gCACXC,EAAU,mCAEHC,EAAa,kCAAnB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAQO,SAASC,IACZ,OAAOV,EAAuB,GAAD,OACtBH,EADsB,sCACgBC,IAI1C,SAASa,EAAkBC,GAC9B,OAAOZ,EAAuB,GAAD,OACtBH,EADsB,gCACUC,EADV,iCAC0Cc,EAD1C,gCAK1B,SAASC,EAAkB5C,GAC9B,OAAO+B,EAAuB,GAAD,OACtBH,EADsB,iBACL5B,EADK,oBACc6B,EADd,oBAK1B,SAASgB,EAAe7C,GAC3B,OAAO+B,EAAuB,GAAD,OACtBH,EADsB,iBACL5B,EADK,4BACsB6B,EADtB,oBAK1B,SAASiB,EAAkB9C,GAC9B,OAAO+B,EAAuB,GAAD,OACtBH,EADsB,iBACL5B,EADK,4BACsB6B,EADtB","sources":["components/BackLink/BackLink.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/themoviedb-api.js"],"sourcesContent":["//import { Link } from \"react-router-dom\";\nimport { FaArrowLeft } from \"react-icons/fa\";\n\nexport const BackLink = ({ label, onClick}) => {\n    \n    return (\n        <div>\n            <button type=\"button\" onClick={onClick}>\n                <FaArrowLeft />\n                {label}\n            </button>\n        </div>\n    )\n};\n\n// export const BackLink = ({ href, label }) => {\n    \n//     return (\n//         <div>\n//             <button type=\"button\">\n//                 <FaArrowLeft />\n//                 <Link to={href}>{label}</Link>\n//             </button>\n//         </div>\n//     )\n// };","import { useState, useEffect } from \"react\";\n\nimport { useParams, NavLink, Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nimport { BackLink } from \"components/BackLink/BackLink.jsx\";\nimport * as api from \"services/themoviedb-api.js\";\n\n\n\n\nexport default function MovieDetailsPage() {\n    \n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const navigate = useNavigate();\n    const location = useLocation();\n    \n\n    useEffect(() => {\n        api.fetchMovieDetails(movieId).then(setMovie);\n    }, [movieId])\n\n    const onGoBack = () => navigate(location?.state?.from ?? \"/\");\n    \n    return (\n        <>\n            <BackLink onClick={onGoBack} label=\"Go back\" />\n            {movie &&\n                <>\n                    <img\n                        src={api.POSTER_URL + movie.poster_path}\n                        alt={movie.title}\n                        width=\"300\"\n                        height=\"450\"\n                    />\n                    <h2>{movie.title}</h2>\n                    <p>User Score: <span>{movie.vote_average}</span></p>\n                    <h3>Overview</h3>\n                    <p>{movie.overview}</p>\n                    {movie.genres && (\n                        <>\n                            <p>Genres</p>\n                            <ul>\n                                {movie.genres.map((genre, index) =>\n                                    <li key={index}>{genre.name}</li>)}\n                            </ul>\n                        </>\n                    )}\n                    <p>Additional information</p>\n                    <nav>\n                        <NavLink to={'cast'} state={location.state}>Cast</NavLink>\n                        <NavLink to={'reviews'} state={location.state}>Reviews</NavLink>\n                    </nav>\n                </>\n                \n            \n            }\n            <Outlet />\n        </>\n    )\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1a4768bd62313a9ba272b58353515c76';\n\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not Found'));\n};\n\n\nexport function fetchTrendingMovies() {\n    return fetchWithErrorHandling(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    )\n};\n\nexport function fetchSearchMovies(query) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n};\n\nexport function fetchMovieDetails(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n};\n\nexport function fetchMovieCast(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n};\n\nexport function fetchMovieReviews(movieId) {\n    return fetchWithErrorHandling(\n        `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n};"],"names":["BackLink","label","onClick","type","MovieDetailsPage","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","useEffect","api","then","state","from","src","poster_path","alt","title","width","height","vote_average","overview","genres","map","genre","index","name","to","BASE_URL","API_KEY","POSTER_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}